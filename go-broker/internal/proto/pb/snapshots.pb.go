// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.21.12
// source: go-broker/internal/proto/snapshots.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SnapshotComponent labels portions of the entity payload so schedulers can shed
// lower priority data first when bandwidth runs short.
type SnapshotComponent int32

const (
	SnapshotComponent_SNAPSHOT_COMPONENT_UNSPECIFIED SnapshotComponent = 0
	SnapshotComponent_SNAPSHOT_COMPONENT_RADAR       SnapshotComponent = 1
	SnapshotComponent_SNAPSHOT_COMPONENT_COSMETICS   SnapshotComponent = 2
	SnapshotComponent_SNAPSHOT_COMPONENT_ORIENTATION SnapshotComponent = 3
	SnapshotComponent_SNAPSHOT_COMPONENT_VELOCITY    SnapshotComponent = 4
	SnapshotComponent_SNAPSHOT_COMPONENT_NEARBY      SnapshotComponent = 5
)

// Enum value maps for SnapshotComponent.
var (
	SnapshotComponent_name = map[int32]string{
		0: "SNAPSHOT_COMPONENT_UNSPECIFIED",
		1: "SNAPSHOT_COMPONENT_RADAR",
		2: "SNAPSHOT_COMPONENT_COSMETICS",
		3: "SNAPSHOT_COMPONENT_ORIENTATION",
		4: "SNAPSHOT_COMPONENT_VELOCITY",
		5: "SNAPSHOT_COMPONENT_NEARBY",
	}
	SnapshotComponent_value = map[string]int32{
		"SNAPSHOT_COMPONENT_UNSPECIFIED": 0,
		"SNAPSHOT_COMPONENT_RADAR":       1,
		"SNAPSHOT_COMPONENT_COSMETICS":   2,
		"SNAPSHOT_COMPONENT_ORIENTATION": 3,
		"SNAPSHOT_COMPONENT_VELOCITY":    4,
		"SNAPSHOT_COMPONENT_NEARBY":      5,
	}
)

func (x SnapshotComponent) Enum() *SnapshotComponent {
	p := new(SnapshotComponent)
	*p = x
	return p
}

func (x SnapshotComponent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnapshotComponent) Descriptor() protoreflect.EnumDescriptor {
	return file_go_broker_internal_proto_snapshots_proto_enumTypes[0].Descriptor()
}

func (SnapshotComponent) Type() protoreflect.EnumType {
	return &file_go_broker_internal_proto_snapshots_proto_enumTypes[0]
}

func (x SnapshotComponent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnapshotComponent.Descriptor instead.
func (SnapshotComponent) EnumDescriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{0}
}

// Snapshot of an entity's physical state that is broadcast to clients.
type EntitySnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion string                 `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	EntityId      string                 `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType    string                 `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Position      *Vector3               `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Velocity      *Vector3               `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Orientation   *Orientation           `protobuf:"bytes,6,opt,name=orientation,proto3" json:"orientation,omitempty"`
	SpeedMps      float64                `protobuf:"fixed64,7,opt,name=speed_mps,json=speedMps,proto3" json:"speed_mps,omitempty"`
	Active        bool                   `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	// Optional radar cross section in square meters. Zero implies unknown.
	RadarCrossSection float64 `protobuf:"fixed64,9,opt,name=radar_cross_section,json=radarCrossSection,proto3" json:"radar_cross_section,omitempty"`
	CapturedAtMs      int64   `protobuf:"varint,10,opt,name=captured_at_ms,json=capturedAtMs,proto3" json:"captured_at_ms,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EntitySnapshot) Reset() {
	*x = EntitySnapshot{}
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitySnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySnapshot) ProtoMessage() {}

func (x *EntitySnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySnapshot.ProtoReflect.Descriptor instead.
func (*EntitySnapshot) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{0}
}

func (x *EntitySnapshot) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *EntitySnapshot) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntitySnapshot) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *EntitySnapshot) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EntitySnapshot) GetVelocity() *Vector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *EntitySnapshot) GetOrientation() *Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *EntitySnapshot) GetSpeedMps() float64 {
	if x != nil {
		return x.SpeedMps
	}
	return 0
}

func (x *EntitySnapshot) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *EntitySnapshot) GetRadarCrossSection() float64 {
	if x != nil {
		return x.RadarCrossSection
	}
	return 0
}

func (x *EntitySnapshot) GetCapturedAtMs() int64 {
	if x != nil {
		return x.CapturedAtMs
	}
	return 0
}

// Priority assigned to a snapshot component. Lower values should be dropped
// before higher priority components.
type SnapshotComponentPriority struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     SnapshotComponent      `protobuf:"varint,1,opt,name=component,proto3,enum=driftpursuit.networking.v1.SnapshotComponent" json:"component,omitempty"`
	Priority      uint32                 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotComponentPriority) Reset() {
	*x = SnapshotComponentPriority{}
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotComponentPriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotComponentPriority) ProtoMessage() {}

func (x *SnapshotComponentPriority) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotComponentPriority.ProtoReflect.Descriptor instead.
func (*SnapshotComponentPriority) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotComponentPriority) GetComponent() SnapshotComponent {
	if x != nil {
		return x.Component
	}
	return SnapshotComponent_SNAPSHOT_COMPONENT_UNSPECIFIED
}

func (x *SnapshotComponentPriority) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// Aggregated world state replayed on connect and after broker restarts.
type WorldSnapshot struct {
	state               protoimpl.MessageState       `protogen:"open.v1"`
	SchemaVersion       string                       `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	CapturedAtMs        int64                        `protobuf:"varint,2,opt,name=captured_at_ms,json=capturedAtMs,proto3" json:"captured_at_ms,omitempty"`
	Entities            []*EntitySnapshot            `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	Assignments         []*TierAssignment            `protobuf:"bytes,4,rep,name=assignments,proto3" json:"assignments,omitempty"`
	ComponentPriorities []*SnapshotComponentPriority `protobuf:"bytes,5,rep,name=component_priorities,json=componentPriorities,proto3" json:"component_priorities,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WorldSnapshot) Reset() {
	*x = WorldSnapshot{}
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldSnapshot) ProtoMessage() {}

func (x *WorldSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldSnapshot.ProtoReflect.Descriptor instead.
func (*WorldSnapshot) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{2}
}

func (x *WorldSnapshot) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *WorldSnapshot) GetCapturedAtMs() int64 {
	if x != nil {
		return x.CapturedAtMs
	}
	return 0
}

func (x *WorldSnapshot) GetEntities() []*EntitySnapshot {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *WorldSnapshot) GetAssignments() []*TierAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *WorldSnapshot) GetComponentPriorities() []*SnapshotComponentPriority {
	if x != nil {
		return x.ComponentPriorities
	}
	return nil
}

// Observer state communicated by gameplay clients to seed tier calculations.
type ObserverState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion string                 `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	ObserverId    string                 `protobuf:"bytes,2,opt,name=observer_id,json=observerId,proto3" json:"observer_id,omitempty"`
	Position      *Vector3               `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Orientation   *Orientation           `protobuf:"bytes,4,opt,name=orientation,proto3" json:"orientation,omitempty"`
	NearbyRangeM  float64                `protobuf:"fixed64,5,opt,name=nearby_range_m,json=nearbyRangeM,proto3" json:"nearby_range_m,omitempty"`
	RadarRangeM   float64                `protobuf:"fixed64,6,opt,name=radar_range_m,json=radarRangeM,proto3" json:"radar_range_m,omitempty"`
	UpdatedAtMs   int64                  `protobuf:"varint,7,opt,name=updated_at_ms,json=updatedAtMs,proto3" json:"updated_at_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserverState) Reset() {
	*x = ObserverState{}
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserverState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserverState) ProtoMessage() {}

func (x *ObserverState) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserverState.ProtoReflect.Descriptor instead.
func (*ObserverState) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{3}
}

func (x *ObserverState) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *ObserverState) GetObserverId() string {
	if x != nil {
		return x.ObserverId
	}
	return ""
}

func (x *ObserverState) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ObserverState) GetOrientation() *Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *ObserverState) GetNearbyRangeM() float64 {
	if x != nil {
		return x.NearbyRangeM
	}
	return 0
}

func (x *ObserverState) GetRadarRangeM() float64 {
	if x != nil {
		return x.RadarRangeM
	}
	return 0
}

func (x *ObserverState) GetUpdatedAtMs() int64 {
	if x != nil {
		return x.UpdatedAtMs
	}
	return 0
}

// Pre-computed tier assignment for a particular observer/entity pair.
type TierAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion string                 `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	ObserverId    string                 `protobuf:"bytes,2,opt,name=observer_id,json=observerId,proto3" json:"observer_id,omitempty"`
	EntityId      string                 `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Tier          InterestTier           `protobuf:"varint,4,opt,name=tier,proto3,enum=driftpursuit.networking.v1.InterestTier" json:"tier,omitempty"`
	ComputedAtMs  int64                  `protobuf:"varint,5,opt,name=computed_at_ms,json=computedAtMs,proto3" json:"computed_at_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TierAssignment) Reset() {
	*x = TierAssignment{}
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TierAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TierAssignment) ProtoMessage() {}

func (x *TierAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_snapshots_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TierAssignment.ProtoReflect.Descriptor instead.
func (*TierAssignment) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_snapshots_proto_rawDescGZIP(), []int{4}
}

func (x *TierAssignment) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *TierAssignment) GetObserverId() string {
	if x != nil {
		return x.ObserverId
	}
	return ""
}

func (x *TierAssignment) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *TierAssignment) GetTier() InterestTier {
	if x != nil {
		return x.Tier
	}
	return InterestTier_INTEREST_TIER_UNSPECIFIED
}

func (x *TierAssignment) GetComputedAtMs() int64 {
	if x != nil {
		return x.ComputedAtMs
	}
	return 0
}

var File_go_broker_internal_proto_snapshots_proto protoreflect.FileDescriptor

var file_go_broker_internal_proto_snapshots_proto_rawDesc = []byte{
	0x0a, 0x28, 0x67, 0x6f, 0x2d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x64, 0x72, 0x69, 0x66,
	0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x67, 0x6f, 0x2d, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x03, 0x0a,
	0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75,
	0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70,
	0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x72,
	0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x70, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x65, 0x64, 0x4d, 0x70, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x72, 0x61, 0x64, 0x61, 0x72, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x74, 0x4d, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x19, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e,
	0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0xdc, 0x02, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x4d, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73,
	0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75,
	0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x13, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0d, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69,
	0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x61, 0x72,
	0x62, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x12, 0x22,
	0x0a, 0x0d, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x61, 0x64, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x4d, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x5f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x4d, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x54, 0x69, 0x65, 0x72, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64,
	0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x4d, 0x73, 0x2a, 0xdb, 0x01, 0x0a, 0x11, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4e, 0x41, 0x50,
	0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18,
	0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x41, 0x44, 0x41, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4e,
	0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x5f, 0x43, 0x4f, 0x53, 0x4d, 0x45, 0x54, 0x49, 0x43, 0x53, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x45, 0x4c, 0x4f, 0x43, 0x49, 0x54, 0x59, 0x10,
	0x04, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x45, 0x41, 0x52, 0x42, 0x59, 0x10, 0x05,
	0x42, 0x52, 0x0a, 0x24, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x64, 0x72,
	0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x64, 0x72, 0x69, 0x66,
	0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_broker_internal_proto_snapshots_proto_rawDescOnce sync.Once
	file_go_broker_internal_proto_snapshots_proto_rawDescData = file_go_broker_internal_proto_snapshots_proto_rawDesc
)

func file_go_broker_internal_proto_snapshots_proto_rawDescGZIP() []byte {
	file_go_broker_internal_proto_snapshots_proto_rawDescOnce.Do(func() {
		file_go_broker_internal_proto_snapshots_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_broker_internal_proto_snapshots_proto_rawDescData)
	})
	return file_go_broker_internal_proto_snapshots_proto_rawDescData
}

var file_go_broker_internal_proto_snapshots_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_broker_internal_proto_snapshots_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_broker_internal_proto_snapshots_proto_goTypes = []any{
	(SnapshotComponent)(0),            // 0: driftpursuit.networking.v1.SnapshotComponent
	(*EntitySnapshot)(nil),            // 1: driftpursuit.networking.v1.EntitySnapshot
	(*SnapshotComponentPriority)(nil), // 2: driftpursuit.networking.v1.SnapshotComponentPriority
	(*WorldSnapshot)(nil),             // 3: driftpursuit.networking.v1.WorldSnapshot
	(*ObserverState)(nil),             // 4: driftpursuit.networking.v1.ObserverState
	(*TierAssignment)(nil),            // 5: driftpursuit.networking.v1.TierAssignment
	(*Vector3)(nil),                   // 6: driftpursuit.networking.v1.Vector3
	(*Orientation)(nil),               // 7: driftpursuit.networking.v1.Orientation
	(InterestTier)(0),                 // 8: driftpursuit.networking.v1.InterestTier
}
var file_go_broker_internal_proto_snapshots_proto_depIdxs = []int32{
	6,  // 0: driftpursuit.networking.v1.EntitySnapshot.position:type_name -> driftpursuit.networking.v1.Vector3
	6,  // 1: driftpursuit.networking.v1.EntitySnapshot.velocity:type_name -> driftpursuit.networking.v1.Vector3
	7,  // 2: driftpursuit.networking.v1.EntitySnapshot.orientation:type_name -> driftpursuit.networking.v1.Orientation
	0,  // 3: driftpursuit.networking.v1.SnapshotComponentPriority.component:type_name -> driftpursuit.networking.v1.SnapshotComponent
	1,  // 4: driftpursuit.networking.v1.WorldSnapshot.entities:type_name -> driftpursuit.networking.v1.EntitySnapshot
	5,  // 5: driftpursuit.networking.v1.WorldSnapshot.assignments:type_name -> driftpursuit.networking.v1.TierAssignment
	2,  // 6: driftpursuit.networking.v1.WorldSnapshot.component_priorities:type_name -> driftpursuit.networking.v1.SnapshotComponentPriority
	6,  // 7: driftpursuit.networking.v1.ObserverState.position:type_name -> driftpursuit.networking.v1.Vector3
	7,  // 8: driftpursuit.networking.v1.ObserverState.orientation:type_name -> driftpursuit.networking.v1.Orientation
	8,  // 9: driftpursuit.networking.v1.TierAssignment.tier:type_name -> driftpursuit.networking.v1.InterestTier
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_go_broker_internal_proto_snapshots_proto_init() }
func file_go_broker_internal_proto_snapshots_proto_init() {
	if File_go_broker_internal_proto_snapshots_proto != nil {
		return
	}
	file_go_broker_internal_proto_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_broker_internal_proto_snapshots_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_broker_internal_proto_snapshots_proto_goTypes,
		DependencyIndexes: file_go_broker_internal_proto_snapshots_proto_depIdxs,
		EnumInfos:         file_go_broker_internal_proto_snapshots_proto_enumTypes,
		MessageInfos:      file_go_broker_internal_proto_snapshots_proto_msgTypes,
	}.Build()
	File_go_broker_internal_proto_snapshots_proto = out.File
	file_go_broker_internal_proto_snapshots_proto_rawDesc = nil
	file_go_broker_internal_proto_snapshots_proto_goTypes = nil
	file_go_broker_internal_proto_snapshots_proto_depIdxs = nil
}
