// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: go-broker/internal/proto/vehicle.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Detailed physical and control state for a single vehicle.
type VehicleState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion string                 `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	VehicleId     string                 `protobuf:"bytes,2,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Position      *Vector3               `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Velocity      *Vector3               `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Orientation   *Orientation           `protobuf:"bytes,5,opt,name=orientation,proto3" json:"orientation,omitempty"`
	// Angular velocity in degrees per second around XYZ axes.
	AngularVelocity *Vector3 `protobuf:"bytes,6,opt,name=angular_velocity,json=angularVelocity,proto3" json:"angular_velocity,omitempty"`
	// Forward speed magnitude in meters per second.
	SpeedMps float64 `protobuf:"fixed64,7,opt,name=speed_mps,json=speedMps,proto3" json:"speed_mps,omitempty"`
	// Commanded forward thrust as a percentage between -1.0 and 1.0.
	ThrottlePct float64 `protobuf:"fixed64,8,opt,name=throttle_pct,json=throttlePct,proto3" json:"throttle_pct,omitempty"`
	// Commanded vertical thruster input between -1.0 (down) and 1.0 (up).
	VerticalThrustPct float64 `protobuf:"fixed64,9,opt,name=vertical_thrust_pct,json=verticalThrustPct,proto3" json:"vertical_thrust_pct,omitempty"`
	// Available boost throttle expressed as a 0-1 range.
	BoostPct float64 `protobuf:"fixed64,10,opt,name=boost_pct,json=boostPct,proto3" json:"boost_pct,omitempty"`
	// Indicates whether boost is actively firing this frame.
	BoostActive bool `protobuf:"varint,11,opt,name=boost_active,json=boostActive,proto3" json:"boost_active,omitempty"`
	// Indicates whether the assisted flight mode is engaged.
	FlightAssistEnabled bool `protobuf:"varint,12,opt,name=flight_assist_enabled,json=flightAssistEnabled,proto3" json:"flight_assist_enabled,omitempty"`
	// Remaining energy reserve as a percentage (0-1) of capacity.
	EnergyRemainingPct float64 `protobuf:"fixed64,13,opt,name=energy_remaining_pct,json=energyRemainingPct,proto3" json:"energy_remaining_pct,omitempty"`
	// UTC timestamp for this state in milliseconds.
	UpdatedAtMs   int64 `protobuf:"varint,14,opt,name=updated_at_ms,json=updatedAtMs,proto3" json:"updated_at_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleState) Reset() {
	*x = VehicleState{}
	mi := &file_go_broker_internal_proto_vehicle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleState) ProtoMessage() {}

func (x *VehicleState) ProtoReflect() protoreflect.Message {
	mi := &file_go_broker_internal_proto_vehicle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleState.ProtoReflect.Descriptor instead.
func (*VehicleState) Descriptor() ([]byte, []int) {
	return file_go_broker_internal_proto_vehicle_proto_rawDescGZIP(), []int{0}
}

func (x *VehicleState) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *VehicleState) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *VehicleState) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *VehicleState) GetVelocity() *Vector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *VehicleState) GetOrientation() *Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *VehicleState) GetAngularVelocity() *Vector3 {
	if x != nil {
		return x.AngularVelocity
	}
	return nil
}

func (x *VehicleState) GetSpeedMps() float64 {
	if x != nil {
		return x.SpeedMps
	}
	return 0
}

func (x *VehicleState) GetThrottlePct() float64 {
	if x != nil {
		return x.ThrottlePct
	}
	return 0
}

func (x *VehicleState) GetVerticalThrustPct() float64 {
	if x != nil {
		return x.VerticalThrustPct
	}
	return 0
}

func (x *VehicleState) GetBoostPct() float64 {
	if x != nil {
		return x.BoostPct
	}
	return 0
}

func (x *VehicleState) GetBoostActive() bool {
	if x != nil {
		return x.BoostActive
	}
	return false
}

func (x *VehicleState) GetFlightAssistEnabled() bool {
	if x != nil {
		return x.FlightAssistEnabled
	}
	return false
}

func (x *VehicleState) GetEnergyRemainingPct() float64 {
	if x != nil {
		return x.EnergyRemainingPct
	}
	return 0
}

func (x *VehicleState) GetUpdatedAtMs() int64 {
	if x != nil {
		return x.UpdatedAtMs
	}
	return 0
}

var File_go_broker_internal_proto_vehicle_proto protoreflect.FileDescriptor

var file_go_broker_internal_proto_vehicle_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x67, 0x6f, 0x2d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70,
	0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x67, 0x6f, 0x2d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x05, 0x0a, 0x0c, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75,
	0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73,
	0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74,
	0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x10, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74,
	0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x0f, 0x61,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x65, 0x64, 0x4d, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x63, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x75, 0x73, 0x74, 0x50, 0x63, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x50, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x4d, 0x73, 0x42, 0x52, 0x0a, 0x24, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75,
	0x69, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x28, 0x64, 0x72, 0x69, 0x66, 0x74, 0x70, 0x75, 0x72, 0x73, 0x75, 0x69, 0x74,
	0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_broker_internal_proto_vehicle_proto_rawDescOnce sync.Once
	file_go_broker_internal_proto_vehicle_proto_rawDescData []byte
)

func file_go_broker_internal_proto_vehicle_proto_rawDescGZIP() []byte {
	file_go_broker_internal_proto_vehicle_proto_rawDescOnce.Do(func() {
		file_go_broker_internal_proto_vehicle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_broker_internal_proto_vehicle_proto_rawDesc), len(file_go_broker_internal_proto_vehicle_proto_rawDesc)))
	})
	return file_go_broker_internal_proto_vehicle_proto_rawDescData
}

var file_go_broker_internal_proto_vehicle_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_broker_internal_proto_vehicle_proto_goTypes = []any{
	(*VehicleState)(nil), // 0: driftpursuit.networking.v1.VehicleState
	(*Vector3)(nil),      // 1: driftpursuit.networking.v1.Vector3
	(*Orientation)(nil),  // 2: driftpursuit.networking.v1.Orientation
}
var file_go_broker_internal_proto_vehicle_proto_depIdxs = []int32{
	1, // 0: driftpursuit.networking.v1.VehicleState.position:type_name -> driftpursuit.networking.v1.Vector3
	1, // 1: driftpursuit.networking.v1.VehicleState.velocity:type_name -> driftpursuit.networking.v1.Vector3
	2, // 2: driftpursuit.networking.v1.VehicleState.orientation:type_name -> driftpursuit.networking.v1.Orientation
	1, // 3: driftpursuit.networking.v1.VehicleState.angular_velocity:type_name -> driftpursuit.networking.v1.Vector3
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_broker_internal_proto_vehicle_proto_init() }
func file_go_broker_internal_proto_vehicle_proto_init() {
	if File_go_broker_internal_proto_vehicle_proto != nil {
		return
	}
	file_go_broker_internal_proto_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_broker_internal_proto_vehicle_proto_rawDesc), len(file_go_broker_internal_proto_vehicle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_broker_internal_proto_vehicle_proto_goTypes,
		DependencyIndexes: file_go_broker_internal_proto_vehicle_proto_depIdxs,
		MessageInfos:      file_go_broker_internal_proto_vehicle_proto_msgTypes,
	}.Build()
	File_go_broker_internal_proto_vehicle_proto = out.File
	file_go_broker_internal_proto_vehicle_proto_goTypes = nil
	file_go_broker_internal_proto_vehicle_proto_depIdxs = nil
}
