syntax = "proto3";

package driftpursuit.networking.v1;

import "go-broker/internal/proto/types.proto";

option go_package = "driftpursuit/broker/internal/proto/pb;pb";
option java_multiple_files = true;
option java_package = "build.buf.driftpursuit.networking.v1";

// Snapshot of an entity's physical state that is broadcast to clients.
message EntitySnapshot {
  string schema_version = 1;
  string entity_id = 2;
  string entity_type = 3;
  Vector3 position = 4;
  Vector3 velocity = 5;
  Orientation orientation = 6;
  double speed_mps = 7;
  bool active = 8;
  // Optional radar cross section in square meters. Zero implies unknown.
  double radar_cross_section = 9;
  int64 captured_at_ms = 10;
  // Authoritative simulation tick identifier for reconciliation.
  uint64 tick_id = 11;
  // Marks the snapshot as a keyframe suitable for hard correction.
  bool keyframe = 12;
}

// SnapshotComponent labels portions of the entity payload so schedulers can shed
// lower priority data first when bandwidth runs short.
enum SnapshotComponent {
  SNAPSHOT_COMPONENT_UNSPECIFIED = 0;
  SNAPSHOT_COMPONENT_RADAR = 1;
  SNAPSHOT_COMPONENT_COSMETICS = 2;
  SNAPSHOT_COMPONENT_ORIENTATION = 3;
  SNAPSHOT_COMPONENT_VELOCITY = 4;
  SNAPSHOT_COMPONENT_NEARBY = 5;
}

// Priority assigned to a snapshot component. Lower values should be dropped
// before higher priority components.
message SnapshotComponentPriority {
  SnapshotComponent component = 1;
  uint32 priority = 2;
}

// Aggregated world state replayed on connect and after broker restarts.
message WorldSnapshot {
  string schema_version = 1;
  int64 captured_at_ms = 2;
  repeated EntitySnapshot entities = 3;
  repeated TierAssignment assignments = 4;
  repeated SnapshotComponentPriority component_priorities = 5;
  // Authoritative simulation tick identifier for the aggregated state.
  uint64 tick_id = 6;
  // Indicates that every entity snapshot should be treated as a keyframe.
  bool keyframe = 7;
}

// Observer state communicated by gameplay clients to seed tier calculations.
message ObserverState {
  string schema_version = 1;
  string observer_id = 2;
  Vector3 position = 3;
  Orientation orientation = 4;
  double nearby_range_m = 5;
  double radar_range_m = 6;
  int64 updated_at_ms = 7;
}

// Pre-computed tier assignment for a particular observer/entity pair.
message TierAssignment {
  string schema_version = 1;
  string observer_id = 2;
  string entity_id = 3;
  InterestTier tier = 4;
  int64 computed_at_ms = 5;
}
