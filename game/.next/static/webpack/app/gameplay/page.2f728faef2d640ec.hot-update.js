"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/gameplay/page",{

/***/ "(app-pages-browser)/./src/vehicles/octahedron/build.ts":
/*!******************************************!*\
  !*** ./src/vehicles/octahedron/build.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildDangerousEnemy: () => (/* binding */ buildDangerousEnemy)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n\nfunction buildDangerousEnemy() {\n    const group = new three__WEBPACK_IMPORTED_MODULE_0__.Group();\n    // Base body: Refined octahedron with more detail for angular, crystalline menace\n    const baseGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.OctahedronGeometry(2.5, 1); // Detail level 1 for sharper edges\n    const bodyMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({\n        color: 0x4a0e0e,\n        roughness: 0.3,\n        metalness: 0.7,\n        emissive: 0x220000,\n        emissiveIntensity: 0.2\n    });\n    const body = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(baseGeometry, bodyMaterial);\n    group.add(body);\n    // Spikes: Procedural spikes on key vertices for a threatening, porcupine-like silhouette\n    const spikeGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.ConeGeometry(0.3, 1.5, 4);\n    const spikeMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({\n        color: 0x111111,\n        roughness: 0.1,\n        metalness: 0.9 // Shiny, blade-like spikes\n    });\n    // Positions for 6 main spikes (aligned to octahedron axes for symmetry)\n    const spikePositions = [\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 2.5, 0),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, -2.5, 0),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(2.5, 0, 0),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(-2.5, 0, 0),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 2.5),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, -2.5) // Backward\n    ];\n    spikePositions.forEach((pos)=>{\n        const spike = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(spikeGeometry, spikeMaterial);\n        spike.position.copy(pos);\n        // Orient spikes outward\n        if (pos.y !== 0) {\n            spike.rotation.x = Math.PI / 2;\n        } else if (pos.x !== 0) {\n            spike.rotation.z = Math.PI / 2;\n        } else {\n            spike.rotation.y = Math.PI / 2;\n        }\n        group.add(spike);\n        // Add smaller secondary spikes for extra menace (offset slightly)\n        for(let i = 0; i < 2; i++){\n            const smallSpike = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(new three__WEBPACK_IMPORTED_MODULE_0__.ConeGeometry(0.15, 0.8, 3), spikeMaterial);\n            const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().copy(pos).normalize().multiplyScalar(1.8).add(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3((Math.random() - 0.5) * 0.5, (Math.random() - 0.5) * 0.5, (Math.random() - 0.5) * 0.5));\n            smallSpike.position.copy(offset);\n            smallSpike.rotation.set(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI); // Random orientation for chaos\n            group.add(smallSpike);\n        }\n    });\n    // Glowing \"eyes\": Small spheres with emissive material for a predatory stare\n    const eyeGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.SphereGeometry(0.4, 8, 6);\n    const eyeMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({\n        color: 0xff4500,\n        emissive: 0xff4500,\n        emissiveIntensity: 0.8,\n        roughness: 0,\n        metalness: 0\n    });\n    const leftEye = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(eyeGeometry, eyeMaterial);\n    leftEye.position.set(-0.8, 0.5, 1.2);\n    group.add(leftEye);\n    const rightEye = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(eyeGeometry, eyeMaterial);\n    rightEye.position.set(0.8, 0.5, 1.2);\n    group.add(rightEye);\n    // Subtle rotation animation hook (call in your render loop: enemy.rotation.y += 0.005;)\n    group.userData = {\n        rotationSpeed: 0.005\n    };\n    // Center and scale the group\n    group.position.set(0, 0, 0);\n    group.scale.set(1, 1, 1);\n    return group;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/vehicles/octahedron/build.ts\n"));

/***/ })

});