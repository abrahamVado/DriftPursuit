"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/gameplay/page",{

/***/ "(app-pages-browser)/./src/vehicles/shared/player.ts":
/*!***************************************!*\
  !*** ./src/vehicles/shared/player.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPlayer: () => (/* binding */ createPlayer)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _vehicles_arrowhead_build__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/vehicles/arrowhead/build */ \"(app-pages-browser)/./src/vehicles/arrowhead/build.ts\");\n/* harmony import */ var _vehicles_octahedron_build__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/vehicles/octahedron/build */ \"(app-pages-browser)/./src/vehicles/octahedron/build.ts\");\n/* harmony import */ var _vehicles_pyramid_build__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/vehicles/pyramid/build */ \"(app-pages-browser)/./src/vehicles/pyramid/build.ts\");\n/* harmony import */ var _vehicles_icosahedron_build__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/vehicles/icosahedron/build */ \"(app-pages-browser)/./src/vehicles/icosahedron/build.ts\");\n/* harmony import */ var _vehicles_cube_build__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/vehicles/cube/build */ \"(app-pages-browser)/./src/vehicles/cube/build.ts\");\n/* harmony import */ var _vehicles_shared_simpleController__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/vehicles/shared/simpleController */ \"(app-pages-browser)/./src/vehicles/shared/simpleController.ts\");\n\n\n\n\n\n\n\nfunction createPlayer(initial, scene) {\n    var _controller_refreshVehicleClearance;\n    const group = new three__WEBPACK_IMPORTED_MODULE_6__.Group();\n    scene.add(group);\n    const builders = {\n        arrowhead: _vehicles_arrowhead_build__WEBPACK_IMPORTED_MODULE_0__.buildArrowhead,\n        octahedron: _vehicles_octahedron_build__WEBPACK_IMPORTED_MODULE_1__.buildOctahedron,\n        pyramid: _vehicles_pyramid_build__WEBPACK_IMPORTED_MODULE_2__.buildPyramid,\n        icosahedron: _vehicles_icosahedron_build__WEBPACK_IMPORTED_MODULE_3__.buildIcosahedron,\n        cube: _vehicles_cube_build__WEBPACK_IMPORTED_MODULE_4__.buildCube\n    };\n    let currentKey = initial;\n    let currentMesh = builders[currentKey]();\n    group.add(currentMesh);\n    const controller = (0,_vehicles_shared_simpleController__WEBPACK_IMPORTED_MODULE_5__.createController)(group, scene);\n    (_controller_refreshVehicleClearance = controller.refreshVehicleClearance) === null || _controller_refreshVehicleClearance === void 0 ? void 0 : _controller_refreshVehicleClearance.call(controller);\n    function setVehicle(key) {\n        var _controller_refreshVehicleClearance;\n        if (currentMesh) group.remove(currentMesh);\n        currentKey = key;\n        currentMesh = builders[currentKey]();\n        group.add(currentMesh);\n        (_controller_refreshVehicleClearance = controller.refreshVehicleClearance) === null || _controller_refreshVehicleClearance === void 0 ? void 0 : _controller_refreshVehicleClearance.call(controller);\n    }\n    function cycleVehicle() {\n        const keys = Object.keys(builders);\n        const i = keys.indexOf(currentKey);\n        setVehicle(keys[(i + 1) % keys.length]);\n    }\n    return {\n        group,\n        controller,\n        setVehicle,\n        cycleVehicle\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy92ZWhpY2xlcy9zaGFyZWQvcGxheWVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThCO0FBQzZCO0FBQ0U7QUFDTjtBQUNRO0FBQ2Q7QUFDb0I7QUFFOUQsU0FBU08sYUFBYUMsT0FBK0QsRUFBRUMsS0FBa0I7UUFpQjlHQztJQWhCQSxNQUFNQyxRQUFRLElBQUlYLHdDQUFXO0lBQzdCUyxNQUFNSSxHQUFHLENBQUNGO0lBRVYsTUFBTUcsV0FBVztRQUNmQyxXQUFXZCxxRUFBY0E7UUFDekJlLFlBQVlkLHVFQUFlQTtRQUMzQmUsU0FBU2QsaUVBQVlBO1FBQ3JCZSxhQUFhZCx5RUFBZ0JBO1FBQzdCZSxNQUFNZCwyREFBU0E7SUFDakI7SUFFQSxJQUFJZSxhQUFhWjtJQUNqQixJQUFJYSxjQUFjUCxRQUFRLENBQUNNLFdBQVc7SUFDdENULE1BQU1FLEdBQUcsQ0FBQ1E7SUFFVixNQUFNWCxhQUFhSixtRkFBZ0JBLENBQUNLLE9BQU9GO0tBQzNDQyxzQ0FBQUEsV0FBV1ksdUJBQXVCLGNBQWxDWiwwREFBQUEseUNBQUFBO0lBRUEsU0FBU2EsV0FBV0MsR0FBMEI7WUFLNUNkO1FBSkEsSUFBSVcsYUFBYVYsTUFBTWMsTUFBTSxDQUFDSjtRQUM5QkQsYUFBYUk7UUFDYkgsY0FBY1AsUUFBUSxDQUFDTSxXQUFXO1FBQ2xDVCxNQUFNRSxHQUFHLENBQUNRO1NBQ1ZYLHNDQUFBQSxXQUFXWSx1QkFBdUIsY0FBbENaLDBEQUFBQSx5Q0FBQUE7SUFDRjtJQUVBLFNBQVNnQjtRQUNQLE1BQU1DLE9BQU9DLE9BQU9ELElBQUksQ0FBQ2I7UUFDekIsTUFBTWUsSUFBSUYsS0FBS0csT0FBTyxDQUFDVjtRQUN2QkcsV0FBV0ksSUFBSSxDQUFDLENBQUNFLElBQUUsS0FBR0YsS0FBS0ksTUFBTSxDQUFDO0lBQ3BDO0lBRUEsT0FBTztRQUFFcEI7UUFBT0Q7UUFBWWE7UUFBWUc7SUFBYTtBQUN2RCIsInNvdXJjZXMiOlsiL2FwcC9zcmMvdmVoaWNsZXMvc2hhcmVkL3BsYXllci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSdcbmltcG9ydCB7IGJ1aWxkQXJyb3doZWFkIH0gZnJvbSAnQC92ZWhpY2xlcy9hcnJvd2hlYWQvYnVpbGQnXG5pbXBvcnQgeyBidWlsZE9jdGFoZWRyb24gfSBmcm9tICdAL3ZlaGljbGVzL29jdGFoZWRyb24vYnVpbGQnXG5pbXBvcnQgeyBidWlsZFB5cmFtaWQgfSBmcm9tICdAL3ZlaGljbGVzL3B5cmFtaWQvYnVpbGQnXG5pbXBvcnQgeyBidWlsZEljb3NhaGVkcm9uIH0gZnJvbSAnQC92ZWhpY2xlcy9pY29zYWhlZHJvbi9idWlsZCdcbmltcG9ydCB7IGJ1aWxkQ3ViZSB9IGZyb20gJ0AvdmVoaWNsZXMvY3ViZS9idWlsZCdcbmltcG9ydCB7IGNyZWF0ZUNvbnRyb2xsZXIgfSBmcm9tICdAL3ZlaGljbGVzL3NoYXJlZC9zaW1wbGVDb250cm9sbGVyJ1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUGxheWVyKGluaXRpYWw6J2Fycm93aGVhZCd8J29jdGFoZWRyb24nfCdweXJhbWlkJ3wnaWNvc2FoZWRyb24nfCdjdWJlJywgc2NlbmU6IFRIUkVFLlNjZW5lKXtcbiAgY29uc3QgZ3JvdXAgPSBuZXcgVEhSRUUuR3JvdXAoKVxuICBzY2VuZS5hZGQoZ3JvdXApXG5cbiAgY29uc3QgYnVpbGRlcnMgPSB7XG4gICAgYXJyb3doZWFkOiBidWlsZEFycm93aGVhZCxcbiAgICBvY3RhaGVkcm9uOiBidWlsZE9jdGFoZWRyb24sXG4gICAgcHlyYW1pZDogYnVpbGRQeXJhbWlkLFxuICAgIGljb3NhaGVkcm9uOiBidWlsZEljb3NhaGVkcm9uLFxuICAgIGN1YmU6IGJ1aWxkQ3ViZVxuICB9XG5cbiAgbGV0IGN1cnJlbnRLZXkgPSBpbml0aWFsXG4gIGxldCBjdXJyZW50TWVzaCA9IGJ1aWxkZXJzW2N1cnJlbnRLZXldKClcbiAgZ3JvdXAuYWRkKGN1cnJlbnRNZXNoKVxuXG4gIGNvbnN0IGNvbnRyb2xsZXIgPSBjcmVhdGVDb250cm9sbGVyKGdyb3VwLCBzY2VuZSlcbiAgY29udHJvbGxlci5yZWZyZXNoVmVoaWNsZUNsZWFyYW5jZT8uKClcblxuICBmdW5jdGlvbiBzZXRWZWhpY2xlKGtleToga2V5b2YgdHlwZW9mIGJ1aWxkZXJzKXtcbiAgICBpZiAoY3VycmVudE1lc2gpIGdyb3VwLnJlbW92ZShjdXJyZW50TWVzaClcbiAgICBjdXJyZW50S2V5ID0ga2V5XG4gICAgY3VycmVudE1lc2ggPSBidWlsZGVyc1tjdXJyZW50S2V5XSgpXG4gICAgZ3JvdXAuYWRkKGN1cnJlbnRNZXNoKVxuICAgIGNvbnRyb2xsZXIucmVmcmVzaFZlaGljbGVDbGVhcmFuY2U/LigpXG4gIH1cblxuICBmdW5jdGlvbiBjeWNsZVZlaGljbGUoKXtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYnVpbGRlcnMpIGFzIEFycmF5PGtleW9mIHR5cGVvZiBidWlsZGVycz5cbiAgICBjb25zdCBpID0ga2V5cy5pbmRleE9mKGN1cnJlbnRLZXkpXG4gICAgc2V0VmVoaWNsZShrZXlzWyhpKzEpJWtleXMubGVuZ3RoXSlcbiAgfVxuXG4gIHJldHVybiB7IGdyb3VwLCBjb250cm9sbGVyLCBzZXRWZWhpY2xlLCBjeWNsZVZlaGljbGUgfVxufVxuIl0sIm5hbWVzIjpbIlRIUkVFIiwiYnVpbGRBcnJvd2hlYWQiLCJidWlsZE9jdGFoZWRyb24iLCJidWlsZFB5cmFtaWQiLCJidWlsZEljb3NhaGVkcm9uIiwiYnVpbGRDdWJlIiwiY3JlYXRlQ29udHJvbGxlciIsImNyZWF0ZVBsYXllciIsImluaXRpYWwiLCJzY2VuZSIsImNvbnRyb2xsZXIiLCJncm91cCIsIkdyb3VwIiwiYWRkIiwiYnVpbGRlcnMiLCJhcnJvd2hlYWQiLCJvY3RhaGVkcm9uIiwicHlyYW1pZCIsImljb3NhaGVkcm9uIiwiY3ViZSIsImN1cnJlbnRLZXkiLCJjdXJyZW50TWVzaCIsInJlZnJlc2hWZWhpY2xlQ2xlYXJhbmNlIiwic2V0VmVoaWNsZSIsImtleSIsInJlbW92ZSIsImN5Y2xlVmVoaWNsZSIsImtleXMiLCJPYmplY3QiLCJpIiwiaW5kZXhPZiIsImxlbmd0aCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/vehicles/shared/player.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/vehicles/shared/simpleController.ts":
/*!*************************************************!*\
  !*** ./src/vehicles/shared/simpleController.ts ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createController: () => (/* binding */ createController)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _weapons_gatling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/weapons/gatling */ \"(app-pages-browser)/./src/weapons/gatling.ts\");\n/* harmony import */ var _weapons_neonLaser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/weapons/neonLaser */ \"(app-pages-browser)/./src/weapons/neonLaser.ts\");\n/* harmony import */ var _weapons_bomb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/weapons/bomb */ \"(app-pages-browser)/./src/weapons/bomb.ts\");\n/* harmony import */ var _weapons_visuals_homingMissileVisual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/weapons/visuals/homingMissileVisual */ \"(app-pages-browser)/./src/weapons/visuals/homingMissileVisual.ts\");\n/* harmony import */ var _weapons_visuals_neonLaserVisual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/weapons/visuals/neonLaserVisual */ \"(app-pages-browser)/./src/weapons/visuals/neonLaserVisual.ts\");\n/* harmony import */ var _weapons_meteorMissile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/weapons/meteorMissile */ \"(app-pages-browser)/./src/weapons/meteorMissile.ts\");\n/* harmony import */ var _vehicles_shared_supportAbilities__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/vehicles/shared/supportAbilities */ \"(app-pages-browser)/./src/vehicles/shared/supportAbilities.ts\");\n/* harmony import */ var _vehicles_shared_abilityVisuals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/vehicles/shared/abilityVisuals */ \"(app-pages-browser)/./src/vehicles/shared/abilityVisuals.ts\");\n\n\n\n\n\n\n\n\n\nfunction createController(group, scene) {\n    const vel = new three__WEBPACK_IMPORTED_MODULE_8__.Vector3(0, 0, 60);\n    const forward = new three__WEBPACK_IMPORTED_MODULE_8__.Vector3(0, 0, -1);\n    const weaponContext = {\n        position: new three__WEBPACK_IMPORTED_MODULE_8__.Vector3(),\n        forward: new three__WEBPACK_IMPORTED_MODULE_8__.Vector3(0, 0, -1),\n        dt: 0,\n        targets: []\n    };\n    let targetProvider = ()=>[];\n    const bounds = new three__WEBPACK_IMPORTED_MODULE_8__.Box3();\n    const size = new three__WEBPACK_IMPORTED_MODULE_8__.Vector3();\n    function computeLauncherClearance() {\n        bounds.setFromObject(group);\n        bounds.getSize(size);\n        const span = Math.max(size.x, size.y, size.z);\n        const distance = Math.max(5, span * 5);\n        meteorRedSystem.setLauncherClearance(distance);\n        meteorVioletSystem.setLauncherClearance(distance);\n    }\n    const gatling = (0,_weapons_gatling__WEBPACK_IMPORTED_MODULE_0__.createGatlingSystem)({\n        fireRate: 25,\n        spread: three__WEBPACK_IMPORTED_MODULE_8__.MathUtils.degToRad(1.5),\n        maxTracers: 32,\n        tracerLifeMs: 250,\n        ammo: 1200,\n        heatPerShot: 1,\n        coolRate: 12,\n        overheatThreshold: 120\n    });\n    const meteorRedSystem = (0,_weapons_meteorMissile__WEBPACK_IMPORTED_MODULE_5__.createMeteorMissileSystem)({\n        maxConcurrent: 2,\n        cooldownMs: 2200,\n        ammo: Number.POSITIVE_INFINITY,\n        ejectionDurationMs: 1000,\n        ejectionSpeed: 40,\n        burnSpeed: 220,\n        navigationConstant: 3.5,\n        detonationRadius: 6,\n        smokeTrailIntervalMs: 70,\n        maxLifetimeMs: 15000,\n        clearanceDistance: 30,\n        swayAmplitude: 24,\n        swayFrequency: 1.2\n    });\n    const meteorVioletSystem = (0,_weapons_meteorMissile__WEBPACK_IMPORTED_MODULE_5__.createMeteorMissileSystem)({\n        maxConcurrent: 2,\n        cooldownMs: 2200,\n        ammo: Number.POSITIVE_INFINITY,\n        ejectionDurationMs: 900,\n        ejectionSpeed: 42,\n        burnSpeed: 225,\n        navigationConstant: 3.6,\n        detonationRadius: 6,\n        smokeTrailIntervalMs: 70,\n        maxLifetimeMs: 15000,\n        clearanceDistance: 30,\n        swayAmplitude: 26,\n        swayFrequency: 1.25\n    });\n    const meteorRedVisual = (0,_weapons_visuals_homingMissileVisual__WEBPACK_IMPORTED_MODULE_3__.createHomingMissileVisual)(scene, {\n        body: 0xff4d4f,\n        emissive: 0xff826a,\n        trail: 0xffc2a1\n    });\n    const meteorVioletVisual = (0,_weapons_visuals_homingMissileVisual__WEBPACK_IMPORTED_MODULE_3__.createHomingMissileVisual)(scene, {\n        body: 0x8c54ff,\n        emissive: 0xca8dff,\n        trail: 0xd8b4ff\n    });\n    const laserSystem = (0,_weapons_neonLaser__WEBPACK_IMPORTED_MODULE_1__.createNeonLaserSystem)({\n        cooldownMs: 2000,\n        durationMs: 600,\n        range: 800,\n        attenuation: 0.002\n    });\n    const laserVisual = (0,_weapons_visuals_neonLaserVisual__WEBPACK_IMPORTED_MODULE_4__.createNeonLaserVisual)(scene, {\n        color: 0x61f6ff\n    });\n    const bombSystem = (0,_weapons_bomb__WEBPACK_IMPORTED_MODULE_2__.createBombSystem)({\n        maxConcurrent: 2,\n        ammo: 6,\n        fuseMs: 2500,\n        cooldownMs: 1500,\n        aoeRadius: 40,\n        craterRadius: 18,\n        debrisCount: 8,\n        gravity: 30\n    });\n    const abilitySystem = (0,_vehicles_shared_supportAbilities__WEBPACK_IMPORTED_MODULE_6__.createSupportAbilitySystem)();\n    const abilityVisuals = (0,_vehicles_shared_abilityVisuals__WEBPACK_IMPORTED_MODULE_7__.createAbilityVisuals)(group);\n    let baseSpeed = 60;\n    let effectiveSpeed = baseSpeed;\n    let activeSlot = 'METEOR_RED';\n    let ammo = gatling.ammo;\n    let missiles = Number.POSITIVE_INFINITY;\n    let laserCooldownMs = laserSystem.cooldownMs;\n    let bombArmed = bombSystem.isArmed;\n    let hull = abilitySystem.state.heal.hull;\n    let shieldActive = abilitySystem.state.shield.active;\n    let dashActive = abilitySystem.state.dash.active;\n    let ultimateActive = abilitySystem.state.ultimate.active;\n    let fireHeld = false;\n    let fireJustPressed = false;\n    let fireJustReleased = false;\n    const slotLabels = {\n        METEOR_RED: 'METEOR BVRAAM R',\n        METEOR_VIOLET: 'METEOR BVRAAM V',\n        LASER: 'NEON LASER',\n        BOMB: 'GRAV BOMB',\n        GATLING: 'GATLING',\n        SHIELD: 'SHIELD',\n        HEAL: 'HEAL',\n        DASH: 'DASH',\n        ULTIMATE: 'ULTIMATE'\n    };\n    computeLauncherClearance();\n    function update(dt, input, queryHeight) {\n        // Mouse steering: aim reticle in NDC controls yaw/pitch\n        const targetYaw = input.mouse.x * 0.6;\n        const targetPitch = input.mouse.y * 0.4;\n        group.rotation.y += (targetYaw - group.rotation.y) * (1 - Math.exp(-6 * dt));\n        group.rotation.x += (targetPitch - group.rotation.x) * (1 - Math.exp(-6 * dt));\n        // Keys\n        if (input.pressed('KeyW')) baseSpeed += 40 * dt;\n        if (input.pressed('KeyS')) baseSpeed -= 40 * dt;\n        if (input.pressed('ShiftLeft')) baseSpeed += 80 * dt;\n        if (input.pressed('KeyQ')) group.rotation.z += 1.2 * dt;\n        if (input.pressed('KeyE')) group.rotation.z -= 1.2 * dt;\n        baseSpeed = Math.max(10, Math.min(160, baseSpeed));\n        // Integrate\n        forward.set(0, 0, -1).applyEuler(group.rotation);\n        const dashBonus = abilitySystem.state.dash.active ? abilitySystem.state.dash.speedBonus : 0;\n        const ultimateBonus = abilitySystem.state.ultimate.active ? abilitySystem.state.dash.speedBonus * 0.5 : 0;\n        effectiveSpeed = baseSpeed + dashBonus + ultimateBonus;\n        vel.copy(forward).multiplyScalar(effectiveSpeed);\n        group.position.addScaledVector(vel, dt);\n        group.userData.speed = effectiveSpeed;\n        // Terrain floor constraint\n        const floor = queryHeight(group.position.x, group.position.z) + 6;\n        if (group.position.y < floor) {\n            group.position.y = floor;\n            vel.y = Math.abs(vel.y) * 0.2;\n        }\n        // Ceiling clamp\n        const ceiling = 2000;\n        if (group.position.y > ceiling) group.position.y = ceiling;\n        const previouslyHeld = fireHeld;\n        fireHeld = Boolean(input.pressed('Space'));\n        fireJustPressed = fireHeld && !previouslyHeld;\n        fireJustReleased = !fireHeld && previouslyHeld;\n        if (input.pressed('Digit1')) activeSlot = 'METEOR_RED';\n        if (input.pressed('Digit2')) activeSlot = 'METEOR_VIOLET';\n        if (input.pressed('Digit3')) activeSlot = 'LASER';\n        if (input.pressed('Digit4')) activeSlot = 'BOMB';\n        if (input.pressed('Digit5')) activeSlot = 'GATLING';\n        if (input.pressed('Digit6')) activeSlot = 'SHIELD';\n        if (input.pressed('Digit7')) activeSlot = 'HEAL';\n        if (input.pressed('Digit8')) activeSlot = 'DASH';\n        if (input.pressed('Digit9')) activeSlot = 'ULTIMATE';\n        weaponContext.position.copy(group.position);\n        weaponContext.forward.copy(forward);\n        weaponContext.dt = dt;\n        weaponContext.targets = targetProvider();\n        if (fireJustPressed) {\n            switch(activeSlot){\n                case 'METEOR_RED':\n                    //1.- Launch a crimson BVRAAM when the red slot is tapped.\n                    meteorRedSystem.tryFire(weaponContext);\n                    break;\n                case 'METEOR_VIOLET':\n                    //2.- Dispatch the violet BVRAAM variant with the same keystroke cadence.\n                    meteorVioletSystem.tryFire(weaponContext);\n                    break;\n                case 'LASER':\n                    laserSystem.fire(weaponContext);\n                    break;\n                case 'BOMB':\n                    bombSystem.fire({\n                        ...weaponContext,\n                        sampleGroundHeight: queryHeight\n                    });\n                    break;\n                case 'GATLING':\n                    break;\n                case 'SHIELD':\n                    abilitySystem.triggerShield();\n                    break;\n                case 'HEAL':\n                    abilitySystem.triggerHeal();\n                    break;\n                case 'DASH':\n                    abilitySystem.triggerDash();\n                    break;\n                case 'ULTIMATE':\n                    abilitySystem.triggerUltimate();\n                    break;\n            }\n        }\n        meteorRedSystem.update(weaponContext);\n        meteorVioletSystem.update(weaponContext);\n        meteorRedVisual.update(meteorRedSystem.missiles);\n        meteorVioletVisual.update(meteorVioletSystem.missiles);\n        if (activeSlot === 'GATLING') {\n            //4.- Advance the hitscan gun and respect trigger state when the slot is active.\n            gatling.update(weaponContext, fireHeld);\n        } else {\n            gatling.update(weaponContext, false);\n        }\n        if (activeSlot === 'LASER') {\n            if (fireHeld) {\n                laserSystem.sustain(weaponContext);\n            }\n            if (fireJustReleased) {\n                laserSystem.release();\n            }\n        } else if (laserSystem.state.active) {\n            laserSystem.release();\n        }\n        laserSystem.update(weaponContext);\n        //5.- Stretch and orient the neon beam according to the freshly sampled weapon state.\n        laserVisual.update(laserSystem.state);\n        bombSystem.update({\n            ...weaponContext,\n            sampleGroundHeight: queryHeight\n        });\n        // Cooldowns\n        ammo = gatling.ammo;\n        missiles = Number.POSITIVE_INFINITY;\n        laserCooldownMs = laserSystem.cooldownMs;\n        bombArmed = bombSystem.isArmed;\n        abilitySystem.update(dt);\n        abilityVisuals.update(abilitySystem.state, group);\n        hull = abilitySystem.state.heal.hull;\n        shieldActive = abilitySystem.state.shield.active;\n        dashActive = abilitySystem.state.dash.active;\n        ultimateActive = abilitySystem.state.ultimate.active;\n    }\n    function dispose() {\n        //6.- Tear down transient weapon meshes so hot swaps between vehicles stay safe.\n        meteorRedVisual.dispose();\n        meteorVioletVisual.dispose();\n        laserVisual.dispose();\n        abilityVisuals.dispose(group);\n    }\n    return {\n        update,\n        refreshVehicleClearance: computeLauncherClearance,\n        get speed () {\n            return effectiveSpeed;\n        },\n        get weaponName () {\n            return slotLabels[activeSlot];\n        },\n        get activeSlot () {\n            return activeSlot;\n        },\n        get ammo () {\n            return ammo;\n        },\n        get missiles () {\n            return missiles;\n        },\n        get laserCooldownMs () {\n            return laserCooldownMs;\n        },\n        get bombArmed () {\n            return bombArmed;\n        },\n        get abilityState () {\n            return abilitySystem.state;\n        },\n        get hull () {\n            return hull;\n        },\n        get shieldActive () {\n            return shieldActive;\n        },\n        get dashActive () {\n            return dashActive;\n        },\n        get ultimateActive () {\n            return ultimateActive;\n        },\n        setTargetProvider (provider) {\n            targetProvider = provider;\n        },\n        dispose\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/vehicles/shared/simpleController.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/weapons/meteorMissile.ts":
/*!**************************************!*\
  !*** ./src/weapons/meteorMissile.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMeteorMissileSystem: () => (/* binding */ createMeteorMissileSystem)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n\nconst WORLD_UP = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0);\nconst NAV_EPSILON = 0.0001;\nconst IMPACT_LIFETIME_MS = 4000;\nfunction createMeteorMissileSystem(options) {\n    const missiles = [];\n    const impacts = [];\n    let ammo = options.ammo;\n    let cooldownMs = 0;\n    let idCounter = 0;\n    var _options_clearanceDistance;\n    let clearanceDistance = Math.max(1, (_options_clearanceDistance = options.clearanceDistance) !== null && _options_clearanceDistance !== void 0 ? _options_clearanceDistance : 12);\n    var _options_swayAmplitude;\n    const swayAmplitude = (_options_swayAmplitude = options.swayAmplitude) !== null && _options_swayAmplitude !== void 0 ? _options_swayAmplitude : 20;\n    var _options_swayFrequency;\n    const swayFrequency = (_options_swayFrequency = options.swayFrequency) !== null && _options_swayFrequency !== void 0 ? _options_swayFrequency : 1.1;\n    const forwardTmp = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const los = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const relVel = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const navAccel = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const toTarget = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const right = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const sway = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    //1.- Sort every live contact that sits ahead of the shooter so rails see the full stack of threats.\n    function acquireFrontTargets(context, origin) {\n        const ranked = [];\n        for (const candidate of context.targets){\n            if (!candidate.alive) continue;\n            toTarget.copy(candidate.position).sub(origin);\n            const distance = toTarget.length();\n            if (distance < NAV_EPSILON) continue;\n            toTarget.normalize();\n            if (toTarget.dot(context.forward) <= 0) continue;\n            ranked.push({\n                target: candidate,\n                distance\n            });\n        }\n        ranked.sort((a, b)=>a.distance - b.distance);\n        return ranked.map((entry)=>entry.target);\n    }\n    function refreshSwayAxis(missile) {\n        missile.swayAxis.copy(missile.referenceForward).cross(WORLD_UP);\n        if (missile.swayAxis.lengthSq() < NAV_EPSILON) {\n            missile.swayAxis.set(1, 0, 0);\n        }\n        missile.swayAxis.normalize();\n    }\n    function igniteMissile(missile, context) {\n        missile.stage = 'burning';\n        missile.stageMs = 0;\n        missile.swayTime = 0;\n        const ranked = acquireFrontTargets(context, missile.position);\n        var _ranked_;\n        const target = (_ranked_ = ranked[0]) !== null && _ranked_ !== void 0 ? _ranked_ : null;\n        var _target_id;\n        missile.targetId = (_target_id = target === null || target === void 0 ? void 0 : target.id) !== null && _target_id !== void 0 ? _target_id : null;\n        if (target) {\n            los.copy(target.position).sub(missile.position);\n            if (los.lengthSq() > NAV_EPSILON) {\n                los.normalize();\n                missile.velocity.copy(los).multiplyScalar(options.burnSpeed);\n                missile.referenceForward.copy(los);\n            }\n        } else {\n            missile.velocity.copy(missile.referenceForward).multiplyScalar(options.burnSpeed);\n        }\n        refreshSwayAxis(missile);\n    }\n    function registerImpact(missile, target) {\n        if (target) {\n            target.alive = false;\n            target.onFire = true;\n            target.falling = true;\n            target.velocity.y = Math.min(target.velocity.y, -options.burnSpeed * 0.25);\n        }\n        var _target_id;\n        impacts.push({\n            id: missile.id,\n            targetId: (_target_id = target === null || target === void 0 ? void 0 : target.id) !== null && _target_id !== void 0 ? _target_id : null,\n            center: missile.position.clone(),\n            ageMs: 0\n        });\n        if (impacts.length > 24) {\n            impacts.splice(0, impacts.length - 24);\n        }\n    }\n    function detonate(index) {\n        missiles.splice(index, 1);\n    }\n    function update(context) {\n        //2.- Reduce cooldown and age explosion decals so follow-up salvos stay in sync with HUD timers.\n        if (cooldownMs > 0) {\n            cooldownMs = Math.max(0, cooldownMs - context.dt * 1000);\n        }\n        for(let i = impacts.length - 1; i >= 0; i--){\n            const impact = impacts[i];\n            impact.ageMs += context.dt * 1000;\n            if (impact.ageMs > IMPACT_LIFETIME_MS) {\n                impacts.splice(i, 1);\n            }\n        }\n        for(let i = missiles.length - 1; i >= 0; i--){\n            const missile = missiles[i];\n            missile.lifetimeMs += context.dt * 1000;\n            missile.stageMs += context.dt * 1000;\n            if (missile.lifetimeMs > options.maxLifetimeMs) {\n                detonate(i);\n                continue;\n            }\n            if (missile.stage === 'ejecting') {\n                const travel = options.ejectionSpeed * context.dt;\n                missile.position.addScaledVector(missile.ejectionDirection, travel);\n                missile.velocity.copy(missile.ejectionDirection).multiplyScalar(options.ejectionSpeed);\n                missile.ejectionTravel += travel;\n                if (missile.ejectionTravel >= clearanceDistance || missile.stageMs >= options.ejectionDurationMs) {\n                    igniteMissile(missile, context);\n                }\n            } else {\n                missile.swayTime += context.dt;\n                var _context_targets_find;\n                let target = (_context_targets_find = context.targets.find((t)=>t.id === missile.targetId && t.alive)) !== null && _context_targets_find !== void 0 ? _context_targets_find : null;\n                if (!target) {\n                    const ranked = acquireFrontTargets(context, missile.position);\n                    var _ranked_;\n                    target = (_ranked_ = ranked[0]) !== null && _ranked_ !== void 0 ? _ranked_ : null;\n                    var _target_id;\n                    missile.targetId = (_target_id = target === null || target === void 0 ? void 0 : target.id) !== null && _target_id !== void 0 ? _target_id : null;\n                }\n                let hasTarget = false;\n                if (target) {\n                    los.copy(target.position).sub(missile.position);\n                    const distance = los.length();\n                    if (distance < options.detonationRadius) {\n                        registerImpact(missile, target);\n                        detonate(i);\n                        continue;\n                    }\n                    los.normalize();\n                    relVel.copy(target.velocity).sub(missile.velocity);\n                    navAccel.copy(relVel.cross(los).cross(los)).multiplyScalar(options.navigationConstant);\n                    missile.velocity.addScaledVector(navAccel, context.dt);\n                    hasTarget = true;\n                }\n                missile.referenceForward.copy(missile.velocity).normalize();\n                refreshSwayAxis(missile);\n                if (hasTarget) {\n                    const phase = Math.sin(missile.swayTime * swayFrequency * Math.PI * 2);\n                    sway.copy(missile.swayAxis).multiplyScalar(phase * swayAmplitude * context.dt);\n                    missile.velocity.add(sway);\n                    missile.velocity.setLength(options.burnSpeed);\n                } else {\n                    missile.velocity.copy(missile.referenceForward).multiplyScalar(options.burnSpeed);\n                }\n            }\n            missile.position.addScaledVector(missile.velocity, context.dt);\n            if (missile.stage === 'burning') {\n                for (const candidate of context.targets){\n                    if (!candidate.alive) continue;\n                    const distance = candidate.position.distanceTo(missile.position);\n                    if (distance < options.detonationRadius) {\n                        registerImpact(missile, candidate);\n                        detonate(i);\n                        break;\n                    }\n                }\n                if (!missiles[i]) continue;\n            }\n            missile.smokeAccumulatorMs += context.dt * 1000;\n            const shouldEmit = missile.stage === 'burning';\n            if (shouldEmit && missile.smokeAccumulatorMs >= options.smokeTrailIntervalMs) {\n                //3.- Drop contrail markers to draw the powered flight path with a simple line strip.\n                missile.smokeAccumulatorMs = 0;\n                missile.smokeTrail.push(missile.position.clone());\n                if (missile.smokeTrail.length > 32) {\n                    missile.smokeTrail.shift();\n                }\n            }\n        }\n    }\n    function tryFire(context) {\n        if (ammo <= 0) return {\n            fired: false,\n            reason: 'empty'\n        };\n        if (cooldownMs > 0) return {\n            fired: false,\n            reason: 'cooldown'\n        };\n        if (missiles.length >= options.maxConcurrent) return {\n            fired: false,\n            reason: 'pool'\n        };\n        forwardTmp.copy(context.forward);\n        if (forwardTmp.lengthSq() < NAV_EPSILON) {\n            forwardTmp.set(0, 0, -1);\n        }\n        forwardTmp.normalize();\n        right.copy(forwardTmp).cross(WORLD_UP);\n        if (right.lengthSq() < NAV_EPSILON) {\n            right.set(1, 0, 0);\n        }\n        right.normalize();\n        const missile = {\n            id: ++idCounter,\n            position: context.position.clone().addScaledVector(right, clearanceDistance * 0.6),\n            velocity: forwardTmp.clone().multiplyScalar(options.ejectionSpeed),\n            targetId: null,\n            lifetimeMs: 0,\n            smokeTrail: [],\n            smokeAccumulatorMs: 0,\n            stage: 'ejecting',\n            stageMs: 0,\n            referenceForward: forwardTmp.clone(),\n            ejectionDirection: forwardTmp.clone(),\n            ejectionTravel: 0,\n            swayTime: 0,\n            swayAxis: right.clone()\n        };\n        missiles.push(missile);\n        ammo -= 1;\n        cooldownMs = options.cooldownMs;\n        return {\n            fired: true,\n            missile\n        };\n    }\n    function setLauncherClearance(distance) {\n        clearanceDistance = Math.max(1, distance);\n    }\n    return {\n        update,\n        tryFire,\n        setLauncherClearance,\n        get ammo () {\n            return ammo;\n        },\n        get cooldownMs () {\n            return cooldownMs;\n        },\n        get activeCount () {\n            return missiles.length;\n        },\n        get missiles () {\n            return missiles;\n        },\n        get impacts () {\n            return impacts;\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/weapons/meteorMissile.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/weapons/visuals/homingMissileVisual.ts":
/*!****************************************************!*\
  !*** ./src/weapons/visuals/homingMissileVisual.ts ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHomingMissileVisual: () => (/* binding */ createHomingMissileVisual)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n\nconst BASE_FORWARD = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1);\nconst TMP_FORWARD = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\nfunction createHomingMissileVisual(scene) {\n    let palette = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n        body: 0xd36f39,\n        emissive: 0xff6b2f,\n        trail: 0xffc48a\n    };\n    const group = new three__WEBPACK_IMPORTED_MODULE_0__.Group();\n    scene.add(group);\n    const bodyMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({\n        color: palette.body,\n        metalness: 0.35,\n        roughness: 0.4,\n        emissive: new three__WEBPACK_IMPORTED_MODULE_0__.Color(palette.emissive),\n        emissiveIntensity: 0.4\n    });\n    const finMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({\n        color: 0x333845,\n        metalness: 0.15,\n        roughness: 0.6\n    });\n    const trailMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.LineBasicMaterial({\n        color: palette.trail,\n        transparent: true,\n        opacity: 0.55,\n        blending: three__WEBPACK_IMPORTED_MODULE_0__.AdditiveBlending\n    });\n    const bodyGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.25, 0.32, 1.4, 10, 1, true);\n    const noseGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.ConeGeometry(0.32, 0.7, 10, 1);\n    const finGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(0.05, 0.4, 0.25);\n    const flameGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.ConeGeometry(0.18, 0.9, 12, 1);\n    const smokeGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.CylinderGeometry(0.08, 0.22, 1.4, 8, 1, true);\n    const flameMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({\n        color: palette.emissive,\n        transparent: true,\n        opacity: 0.9,\n        blending: three__WEBPACK_IMPORTED_MODULE_0__.AdditiveBlending\n    });\n    const smokeMaterial = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({\n        color: 0x444f63,\n        transparent: true,\n        opacity: 0.45,\n        depthWrite: false,\n        blending: three__WEBPACK_IMPORTED_MODULE_0__.NormalBlending,\n        side: three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide\n    });\n    const renderStates = new Map();\n    function buildMissile() {\n        //1.- Construct a reusable missile rig so pooled projectiles share GPU buffers.\n        const missileGroup = new three__WEBPACK_IMPORTED_MODULE_0__.Group();\n        const body = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(bodyGeometry, bodyMaterial);\n        body.rotation.x = Math.PI / 2;\n        missileGroup.add(body);\n        const nose = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(noseGeometry, bodyMaterial);\n        nose.position.z = -1;\n        missileGroup.add(nose);\n        for(let i = 0; i < 4; i++){\n            const fin = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(finGeometry, finMaterial);\n            fin.position.set(0, Math.sin(i * Math.PI / 2) * 0.35, Math.cos(i * Math.PI / 2) * 0.35);\n            fin.rotation.x = Math.PI / 2;\n            fin.rotation.y = i * Math.PI / 2;\n            missileGroup.add(fin);\n        }\n        const trailGeometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n        const trail = new three__WEBPACK_IMPORTED_MODULE_0__.Line(trailGeometry, trailMaterial);\n        missileGroup.add(trail);\n        const flame = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(flameGeometry, flameMaterial);\n        flame.position.z = 0.75;\n        flame.rotation.x = Math.PI;\n        missileGroup.add(flame);\n        const smoke = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(smokeGeometry, smokeMaterial.clone());\n        smoke.position.z = 0.9;\n        smoke.rotation.x = Math.PI / 2;\n        missileGroup.add(smoke);\n        group.add(missileGroup);\n        return {\n            mesh: missileGroup,\n            trail,\n            flame,\n            smoke\n        };\n    }\n    function update(missiles) {\n        const seen = new Set();\n        for (const missile of missiles){\n            seen.add(missile.id);\n            let renderState = renderStates.get(missile.id);\n            if (!renderState) {\n                //2.- Spawn a visual shell when the simulation reports a new missile instance.\n                renderState = buildMissile();\n                renderStates.set(missile.id, renderState);\n            }\n            //3.- Snap the rig to the authoritative kinematic state generated by the weapon logic.\n            renderState.mesh.position.copy(missile.position);\n            TMP_FORWARD.copy(missile.velocity);\n            if (TMP_FORWARD.lengthSq() < 1e-6) {\n                TMP_FORWARD.set(0, 0, 1);\n            }\n            TMP_FORWARD.normalize();\n            renderState.mesh.quaternion.setFromUnitVectors(BASE_FORWARD, TMP_FORWARD);\n            const burning = missile.stage === 'burning';\n            renderState.flame.visible = burning;\n            renderState.smoke.visible = burning;\n            if (burning) {\n                var _missile_stageMs;\n                const stageMs = (_missile_stageMs = missile.stageMs) !== null && _missile_stageMs !== void 0 ? _missile_stageMs : 0;\n                const intensity = Math.min(1, stageMs / 400);\n                renderState.flame.scale.setScalar(0.7 + intensity * 0.6);\n                renderState.smoke.scale.set(1 + intensity * 0.8, 1 + intensity * 0.8, 1);\n                const smokeMat = renderState.smoke.material;\n                smokeMat.opacity = 0.3 + intensity * 0.3;\n            }\n            //4.- Rebuild the exhaust ribbon so contrails appear where guidance history says they were.\n            const points = missile.smokeTrail.length > 0 ? missile.smokeTrail : [\n                missile.position\n            ];\n            renderState.trail.geometry.setFromPoints(points);\n        }\n        for (const [id, renderState] of renderStates){\n            if (seen.has(id)) continue;\n            //5.- Clean up visuals for detonated missiles to keep the pool lean.\n            group.remove(renderState.mesh);\n            renderState.trail.geometry.dispose();\n            renderStates.delete(id);\n        }\n    }\n    function dispose() {\n        //6.- Release pooled assets when the owning controller tears down the weapon systems.\n        for (const [, renderState] of renderStates){\n            group.remove(renderState.mesh);\n            renderState.trail.geometry.dispose();\n        }\n        renderStates.clear();\n        scene.remove(group);\n        bodyGeometry.dispose();\n        noseGeometry.dispose();\n        finGeometry.dispose();\n        flameGeometry.dispose();\n        smokeGeometry.dispose();\n        bodyMaterial.dispose();\n        finMaterial.dispose();\n        trailMaterial.dispose();\n        flameMaterial.dispose();\n        smokeMaterial.dispose();\n    }\n    return {\n        update,\n        dispose,\n        group\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/weapons/visuals/homingMissileVisual.ts\n"));

/***/ })

});